{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","src","poster_path","backdrop_path","alt","name","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","console","log","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c9047c9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;\n","import \"./Row.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      //console.log(request);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchUrl]);\n\n  // console.table(movies);\n\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => {\n          return (\n            <img\n              key={movie.id}\n              className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n              src={`${base_url}${\n                isLargeRow ? movie.poster_path : movie.backdrop_path\n              }`}\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Row;\n","const API_KEY = \"2245299b68a8a5dcd457dae5edb0f629\";\n\nconst requests = {\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n};\n\nexport default requests;\n","import \"./Banner.css\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length)\n        ]\n      );\n      return request;\n    }\n    fetchData();\n  }, []);\n\n  console.log(movie);\n\n  return (\n    <header\n      className=\"banner\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\n            \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\n        )`,\n        backgroundPosition: \"center center\",\n      }}\n    >\n      <div className=\"banner__contents\">\n        <h1>{movie?.title || movie?.name || movie?.original_name}</h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button\">Play</button>\n          <button className=\"banner__button\">My List</button>\n        </div>\n        <h1 className=\"banner__description\">{movie?.overview}</h1>\n      </div>\n      <div className=\"banner__fadeBottom\"></div>\n    </header>\n  );\n}\n\nexport default Banner;\n","import \"./Nav.css\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Nav() {\n  const [show, handleShow] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", handleShow);\n    };\n  }, []);\n\n  return (\n    <div className={`nav && ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Netflix_logo.svg/800px-Netflix_logo.svg.png\"\n        alt=\"Netflix Logo\"\n      />\n      <img\n        className=\"nav__avatar\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n        alt=\"Netflix Avatar Logo\"\n      />\n    </div>\n  );\n}\n\nexport default Nav;\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Nav />\n        <Banner />\n        <Row\n          title=\"NETFLIX ORIGINALS\"\n          fetchUrl={requests.fetchNetflixOriginals}\n          isLargeRow={true}\n        />\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n        <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}